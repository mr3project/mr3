apiVersion: apps/v1
kind: StatefulSet
metadata:
  #namespace: hivemr3
  name: hivemr3-timeline
spec:
  serviceName: timeline
  replicas: 1
  selector:
    matchLabels:
      hivemr3_hive_source: hivesrc3
      hivemr3_app: timeline
  template:
    metadata:
      #namespace: hivemr3
      name: hivemr3-timeline
      labels:
        hivemr3_hive_source: hivesrc3
        hivemr3_app: timeline
        mr3-pod-role: master-role
    spec:
      restartPolicy: Always
      hostAliases:
      {{- range .Values.hostAliases }}
      - ip: {{ .ip }}
        hostnames: 
        {{- range .hostnames }}
        - {{ . }}
        {{- end }}
      {{- end }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  hivemr3_app: metastore
      {{- if .Values.docker.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.docker.imagePullSecrets }}
      {{- end }}
      containers:
      - image: {{ .Values.docker.image }}
        command:
        - /opt/mr3-run/ats/timeline-service.sh
        imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
        name: timelineserver-http
        env:
        - name: ATS_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: client-timeline-config
              key: ats-secret-key
        resources:
          requests:
            cpu: {{ .Values.timeline.resources.requests.cpu }}
            memory: {{ .Values.timeline.resources.requests.memory }}
          limits:
            cpu: {{ .Values.timeline.resources.limits.cpu }}
            memory: {{ .Values.timeline.resources.limits.memory }}
        ports:
        - containerPort: 9190
          protocol: TCP
        - containerPort: 9188
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9188
          initialDelaySeconds: 120
          periodSeconds: 120
        volumeMounts:
        - name: conf-k8s-volume
          mountPath: /opt/mr3-run/ats/conf
          readOnly: true
        - name: key-k8s-volume
          mountPath: /opt/mr3-run/ats/key
          readOnly: true
        - name: env-secret-k8s-volume
          mountPath: /opt/mr3-run/ats/env.sh
          subPath: env.sh
        - name: timeline-work-dir-volume
          mountPath: /opt/mr3-run/ats/work-dir
      - image: {{ .Values.docker.image }}
        command:
        - /opt/mr3-run/ats/mr3-ui.sh
        imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
        name: mr3-ui-jetty
        resources:
          requests:
            cpu: {{ .Values.ui.resources.requests.cpu }}
            memory: {{ .Values.ui.resources.requests.memory }}
          limits:
            cpu: {{ .Values.ui.resources.limits.cpu }}
            memory: {{ .Values.ui.resources.limits.memory }}
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 120
        volumeMounts:
        - name: conf-k8s-volume
          mountPath: /opt/mr3-run/ats/conf
          readOnly: true
      - image: {{ .Values.docker.image }}
        command:
        - /opt/mr3-run/ats/prometheus.sh
        imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
        name: prometheus
        resources:
          requests:
            cpu: {{ .Values.prometheus.resources.requests.cpu }}
            memory: {{ .Values.prometheus.resources.requests.memory }}
          limits:
            cpu: {{ .Values.prometheus.resources.limits.cpu }}
            memory: {{ .Values.prometheus.resources.limits.memory }}
        ports:
        - containerPort: 9090
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 120
          periodSeconds: 120
        volumeMounts:
        - name: conf-k8s-volume
          mountPath: /opt/mr3-run/ats/conf
          readOnly: true
        - name: timeline-work-dir-volume
          mountPath: /opt/mr3-run/ats/prometheus/data
      - image: {{ .Values.docker.image }}
        command:
        - /opt/mr3-run/ats/grafana.sh
        imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
        name: grafana
        resources:
          requests:
            cpu: {{ .Values.grafana.resources.requests.cpu }}
            memory: {{ .Values.grafana.resources.requests.memory }}
          limits:
            cpu: {{ .Values.grafana.resources.limits.cpu }}
            memory: {{ .Values.grafana.resources.limits.memory }}
        ports:
        - containerPort: 3000
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 120
          periodSeconds: 120
        volumeMounts:
        - name: conf-k8s-volume
          mountPath: /opt/mr3-run/ats/conf
          readOnly: true
        - name: timeline-work-dir-volume
          mountPath: /opt/mr3-run/ats/grafana/data
      volumes:
      - name: conf-k8s-volume
        configMap:
          name: {{ .Values.name.timeline.configMap }}
      - name: key-k8s-volume
        secret:
          secretName: {{ .Values.name.timeline.secret }}
      - name: env-secret-k8s-volume
        secret:
          secretName: {{ .Values.name.envSecret }}
      - name: timeline-work-dir-volume
        persistentVolumeClaim:
          claimName: {{ .Values.name.persistentVolumeClaim }}
